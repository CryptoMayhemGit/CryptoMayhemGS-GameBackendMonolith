// <auto-generated />
using System;
using Mayhem.Dal.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Mayhem.Dal.Migrations
{
    [DbContext(typeof(MayhemDataContext))]
    [Migration("20220712111102_LandsTypeChangeNameMigration")]
    partial class LandsTypeChangeNameMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11");

            modelBuilder.Entity("Mayhem.Dal.Tables.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Attribute", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("AttributeTypeId")
                        .HasColumnType("int");

                    b.Property<double>("BaseValue")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<long>("NpcId")
                        .HasColumnType("bigint");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("AttributeTypeId");

                    b.HasIndex("NpcId");

                    b.ToTable("Attribute", "dbo");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.AuditLogs.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<long>("Nonce")
                        .HasColumnType("bigint");

                    b.Property<string>("SignedMessage")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("Wallet")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("AuditLog", "logs");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Block", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BlockTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<long>("LastBlock")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.HasIndex("BlockTypeId");

                    b.ToTable("Block", "dbo");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Buildings.Building", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<int>("BuildingTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<long>("LandId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuildingTypeId");

                    b.HasIndex("LandId");

                    b.ToTable("Building", "building");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Buildings.BuildingBonus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<double>("Bonus")
                        .HasColumnType("float");

                    b.Property<int>("BuildingBonusTypeId")
                        .HasColumnType("int");

                    b.Property<long>("BuildingId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.HasIndex("BuildingBonusTypeId")
                        .IsUnique();

                    b.HasIndex("BuildingId");

                    b.ToTable("BuildingBonus", "building");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.AttributeType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AttributeType", "dictionary");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "LightWoodProduction"
                        },
                        new
                        {
                            Id = 2,
                            Name = "HeavyWoodProduction"
                        },
                        new
                        {
                            Id = 3,
                            Name = "IronOreProduction"
                        },
                        new
                        {
                            Id = 4,
                            Name = "TitaniumProduction"
                        },
                        new
                        {
                            Id = 5,
                            Name = "MeatProduction"
                        },
                        new
                        {
                            Id = 6,
                            Name = "CerealProduction"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Attack"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Healing"
                        },
                        new
                        {
                            Id = 9,
                            Name = "MoveSpeed"
                        },
                        new
                        {
                            Id = 10,
                            Name = "MeatConsumption"
                        },
                        new
                        {
                            Id = 11,
                            Name = "CerealConsumption"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Discovery"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Repair"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Construction"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Detection"
                        },
                        new
                        {
                            Id = 16,
                            Name = "MechProduction"
                        });
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.BlockType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BlockType", "dictionary");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Avatar"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Npc"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Item"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Land"
                        });
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.BuildingBonusType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BuildingBonusType", "dictionary");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Wood"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mining"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Construction"
                        },
                        new
                        {
                            Id = 4,
                            Name = "MechaniumCollection"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Attack"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Cereal"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Meat"
                        });
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.BuildingType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BuildingType", "dictionary");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Lumbermill"
                        },
                        new
                        {
                            Id = 2,
                            Name = "OreMine"
                        },
                        new
                        {
                            Id = 3,
                            Name = "MechanicalWorkshop"
                        },
                        new
                        {
                            Id = 4,
                            Name = "DroneFactory"
                        },
                        new
                        {
                            Id = 5,
                            Name = "CombatWorkshop"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Farm"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Slaughterhouse"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Guardhouse"
                        });
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.GuildBuildingBonusType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GuildBuildingBonusType", "dictionary");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "All"
                        },
                        new
                        {
                            Id = 2,
                            Name = "DiscoveryDetection"
                        },
                        new
                        {
                            Id = 3,
                            Name = "MechConstruction"
                        },
                        new
                        {
                            Id = 4,
                            Name = "MechAttack"
                        },
                        new
                        {
                            Id = 5,
                            Name = "MoveSpeed"
                        });
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.GuildBuildingType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GuildBuildingType", "dictionary");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "AdriaCorporationHeadquarters"
                        },
                        new
                        {
                            Id = 2,
                            Name = "ExplorationBoard"
                        },
                        new
                        {
                            Id = 3,
                            Name = "MechBoard"
                        },
                        new
                        {
                            Id = 4,
                            Name = "FightBoard"
                        },
                        new
                        {
                            Id = 5,
                            Name = "TransportBoard"
                        });
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.GuildImprovementType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GuildImprovementType", "dictionary");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "RegenerativeMeal"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Flashlight"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Motivator"
                        },
                        new
                        {
                            Id = 4,
                            Name = "SupportPackage"
                        },
                        new
                        {
                            Id = 5,
                            Name = "NeuralConditioning"
                        },
                        new
                        {
                            Id = 6,
                            Name = "SIControlled"
                        },
                        new
                        {
                            Id = 7,
                            Name = "TerrainScanning"
                        },
                        new
                        {
                            Id = 8,
                            Name = "AerialReconnaissance"
                        },
                        new
                        {
                            Id = 9,
                            Name = "SoilSampling"
                        },
                        new
                        {
                            Id = 10,
                            Name = "MolecularAnalysis"
                        },
                        new
                        {
                            Id = 11,
                            Name = "StatisticalAnalysis"
                        },
                        new
                        {
                            Id = 12,
                            Name = "SatelliteReconnaissance"
                        },
                        new
                        {
                            Id = 13,
                            Name = "PatternLibrary"
                        },
                        new
                        {
                            Id = 14,
                            Name = "SheetMetalPressingPlant"
                        },
                        new
                        {
                            Id = 15,
                            Name = "AssemblyLine"
                        },
                        new
                        {
                            Id = 16,
                            Name = "WasteManagement"
                        },
                        new
                        {
                            Id = 17,
                            Name = "ProductionMatrix"
                        },
                        new
                        {
                            Id = 18,
                            Name = "ImprovedAssemblyLine"
                        },
                        new
                        {
                            Id = 19,
                            Name = "ImprovedEnergyProcessing"
                        },
                        new
                        {
                            Id = 20,
                            Name = "WeaponReinforcement"
                        },
                        new
                        {
                            Id = 21,
                            Name = "StrongerInternalStructure"
                        },
                        new
                        {
                            Id = 22,
                            Name = "MechaniumI"
                        },
                        new
                        {
                            Id = 23,
                            Name = "MechaniumII"
                        },
                        new
                        {
                            Id = 24,
                            Name = "MechaniumIII"
                        },
                        new
                        {
                            Id = 25,
                            Name = "LargerWheels"
                        },
                        new
                        {
                            Id = 26,
                            Name = "ImprovedTransmission"
                        },
                        new
                        {
                            Id = 27,
                            Name = "PowerfulEngine"
                        },
                        new
                        {
                            Id = 28,
                            Name = "AdditionalDrive"
                        },
                        new
                        {
                            Id = 29,
                            Name = "ImprovedFuelMixture"
                        },
                        new
                        {
                            Id = 30,
                            Name = "LogisticSupport"
                        });
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.ImprovementType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ImprovementType", "dictionary");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "ReinforcedChainsawMotor"
                        },
                        new
                        {
                            Id = 2,
                            Name = "ImprovedGear"
                        },
                        new
                        {
                            Id = 3,
                            Name = "HardenedSawChain"
                        },
                        new
                        {
                            Id = 4,
                            Name = "TreeScanner"
                        },
                        new
                        {
                            Id = 5,
                            Name = "EnergyCells"
                        },
                        new
                        {
                            Id = 6,
                            Name = "LaserBlade"
                        },
                        new
                        {
                            Id = 7,
                            Name = "TitaniumPickaxe"
                        },
                        new
                        {
                            Id = 8,
                            Name = "DiamondHeadDrillBit"
                        },
                        new
                        {
                            Id = 9,
                            Name = "BasicMiningCombine"
                        },
                        new
                        {
                            Id = 10,
                            Name = "DeepExcavationsTechnology"
                        },
                        new
                        {
                            Id = 11,
                            Name = "MiningShaftsVentilation"
                        },
                        new
                        {
                            Id = 12,
                            Name = "OreElectrolyticRefining"
                        },
                        new
                        {
                            Id = 13,
                            Name = "QuickDryingCement"
                        },
                        new
                        {
                            Id = 14,
                            Name = "ReinforcedFoundations"
                        },
                        new
                        {
                            Id = 15,
                            Name = "ModularMaterials"
                        },
                        new
                        {
                            Id = 16,
                            Name = "SpecialistBrigade"
                        },
                        new
                        {
                            Id = 17,
                            Name = "PrefabricatedElements"
                        },
                        new
                        {
                            Id = 18,
                            Name = "ConstructionRobot"
                        },
                        new
                        {
                            Id = 19,
                            Name = "ReinforcedRotors"
                        },
                        new
                        {
                            Id = 20,
                            Name = "TitaniumHull"
                        },
                        new
                        {
                            Id = 21,
                            Name = "EnlargedScraper"
                        },
                        new
                        {
                            Id = 22,
                            Name = "AdditionalCovers"
                        },
                        new
                        {
                            Id = 23,
                            Name = "PrecisePositioning"
                        },
                        new
                        {
                            Id = 24,
                            Name = "AdditionalTankForMechanium"
                        },
                        new
                        {
                            Id = 25,
                            Name = "FullShellMissiles"
                        },
                        new
                        {
                            Id = 26,
                            Name = "WeaponModificationDrives"
                        },
                        new
                        {
                            Id = 27,
                            Name = "HighEnergyPowder"
                        },
                        new
                        {
                            Id = 28,
                            Name = "BattlefieldRadar"
                        },
                        new
                        {
                            Id = 29,
                            Name = "LaserGuidance"
                        },
                        new
                        {
                            Id = 30,
                            Name = "AssistedAI"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Seedling"
                        },
                        new
                        {
                            Id = 32,
                            Name = "SelectedSoil"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Fertilizers"
                        },
                        new
                        {
                            Id = 34,
                            Name = "PlantGrafting"
                        },
                        new
                        {
                            Id = 35,
                            Name = "ProtectiveMeasures"
                        },
                        new
                        {
                            Id = 36,
                            Name = "GeneticModification"
                        },
                        new
                        {
                            Id = 37,
                            Name = "HealthyFeed"
                        },
                        new
                        {
                            Id = 38,
                            Name = "NaturalSelectionControl"
                        },
                        new
                        {
                            Id = 39,
                            Name = "VeterinaryCare"
                        },
                        new
                        {
                            Id = 40,
                            Name = "SustainableBreeding"
                        },
                        new
                        {
                            Id = 41,
                            Name = "IncreasedAnimalWelfare"
                        },
                        new
                        {
                            Id = 42,
                            Name = "GeneticSupport"
                        },
                        new
                        {
                            Id = 43,
                            Name = "SituationalRecognition"
                        },
                        new
                        {
                            Id = 44,
                            Name = "ObservationDrone"
                        },
                        new
                        {
                            Id = 45,
                            Name = "InfraredObservation"
                        },
                        new
                        {
                            Id = 46,
                            Name = "FireControlDrone"
                        },
                        new
                        {
                            Id = 47,
                            Name = "ReinforcedAmmunition"
                        },
                        new
                        {
                            Id = 48,
                            Name = "ImprovedFireControlComputer"
                        });
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.ItemBonusType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemBonusType", "dictionary");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Wood"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mining"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Meat"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cereal"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Attack"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Healing"
                        },
                        new
                        {
                            Id = 7,
                            Name = "MoveSpeed"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Discovery"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Repair"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Construction"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Detection"
                        },
                        new
                        {
                            Id = 12,
                            Name = "MechProduction"
                        });
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.ItemType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ItemType", "dictionary");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "AirHammer"
                        },
                        new
                        {
                            Id = 2,
                            Name = "GravityHammer"
                        },
                        new
                        {
                            Id = 3,
                            Name = "SonicHammer"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Excavator"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Chainsaw"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Gravitysaw"
                        },
                        new
                        {
                            Id = 7,
                            Name = "LaserCutter"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Harvester"
                        },
                        new
                        {
                            Id = 9,
                            Name = "HuntingRifle"
                        },
                        new
                        {
                            Id = 10,
                            Name = "RapidFireRifle"
                        },
                        new
                        {
                            Id = 11,
                            Name = "SniperRifle"
                        },
                        new
                        {
                            Id = 12,
                            Name = "OffRoadVehicleWithMachineGun"
                        },
                        new
                        {
                            Id = 13,
                            Name = "SeedlingContainer"
                        },
                        new
                        {
                            Id = 14,
                            Name = "SeedlingKit"
                        },
                        new
                        {
                            Id = 15,
                            Name = "HydroponicVessel"
                        },
                        new
                        {
                            Id = 16,
                            Name = "HydroponicContainer"
                        },
                        new
                        {
                            Id = 17,
                            Name = "AutomaticCarbine"
                        },
                        new
                        {
                            Id = 18,
                            Name = "LargeCaliberRifle"
                        },
                        new
                        {
                            Id = 19,
                            Name = "LaserRifle"
                        },
                        new
                        {
                            Id = 20,
                            Name = "ArmoredCarWithMachineGun"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Binoculars"
                        },
                        new
                        {
                            Id = 22,
                            Name = "TacticalScope"
                        },
                        new
                        {
                            Id = 23,
                            Name = "NightVision"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Motorcycle"
                        },
                        new
                        {
                            Id = 25,
                            Name = "MultiTool"
                        },
                        new
                        {
                            Id = 26,
                            Name = "ToolBox"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Drill"
                        },
                        new
                        {
                            Id = 28,
                            Name = "ContainerWithWorkshop"
                        },
                        new
                        {
                            Id = 29,
                            Name = "HammerAndScrewdriver"
                        },
                        new
                        {
                            Id = 30,
                            Name = "ElectronicMeter"
                        },
                        new
                        {
                            Id = 31,
                            Name = "MultiFunctionRobot"
                        },
                        new
                        {
                            Id = 32,
                            Name = "CraneOnTheCar"
                        },
                        new
                        {
                            Id = 33,
                            Name = "HandProbe"
                        },
                        new
                        {
                            Id = 34,
                            Name = "LaserProbe"
                        },
                        new
                        {
                            Id = 35,
                            Name = "InspectionCrate"
                        },
                        new
                        {
                            Id = 36,
                            Name = "TestContainer"
                        },
                        new
                        {
                            Id = 37,
                            Name = "SetOfMeasuringCup"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Distiller"
                        },
                        new
                        {
                            Id = 39,
                            Name = "DiagnosticStation"
                        },
                        new
                        {
                            Id = 40,
                            Name = "MaterialContainer"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Truck"
                        },
                        new
                        {
                            Id = 42,
                            Name = "Van"
                        },
                        new
                        {
                            Id = 43,
                            Name = "ContainerTruck"
                        },
                        new
                        {
                            Id = 44,
                            Name = "ContainerTrailer"
                        },
                        new
                        {
                            Id = 45,
                            Name = "FirstAidKit"
                        },
                        new
                        {
                            Id = 46,
                            Name = "SurgicalKit"
                        },
                        new
                        {
                            Id = 47,
                            Name = "MedicalRobot"
                        },
                        new
                        {
                            Id = 48,
                            Name = "MedicalContainer"
                        },
                        new
                        {
                            Id = 49,
                            Name = "ScaleMeter"
                        },
                        new
                        {
                            Id = 50,
                            Name = "SearchProbe"
                        },
                        new
                        {
                            Id = 51,
                            Name = "DroneWithGeologicalCamera"
                        },
                        new
                        {
                            Id = 52,
                            Name = "InspectionContainer"
                        },
                        new
                        {
                            Id = 53,
                            Name = "ReinforcedDrill"
                        },
                        new
                        {
                            Id = 54,
                            Name = "SingleArmIndustrialRobot"
                        },
                        new
                        {
                            Id = 55,
                            Name = "MultiArmIndustrialRobot"
                        },
                        new
                        {
                            Id = 56,
                            Name = "HumanoidRobot"
                        });
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.LandType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LandType", "dictionary");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Swamp"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Forest"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Mountain"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Desert"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Field"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Biome1"
                        },
                        new
                        {
                            Id = -1,
                            Name = "Water"
                        });
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.NpcType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NpcType", "dictionary");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Miner"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Lumberjack"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hunter"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Farmer"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Soldier"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Scout"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Mechanic"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Engineer"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Biologist"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Chemist"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Pilot"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Doctor"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Geologist"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Fitter"
                        });
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.ResourceType", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ResourceType", "dictionary");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "LightWood"
                        },
                        new
                        {
                            Id = 2,
                            Name = "HeavyWood"
                        },
                        new
                        {
                            Id = 3,
                            Name = "IronOre"
                        },
                        new
                        {
                            Id = 4,
                            Name = "TitaniumOre"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Cereal"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Meat"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Mechanium"
                        });
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.GameUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("nvarchar(320)");

                    b.Property<int?>("GuildId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("WalletAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("GuildId");

                    b.HasIndex("WalletAddress")
                        .IsUnique();

                    b.ToTable("GameUser", "dbo");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Guilds.Guild", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Description")
                        .HasMaxLength(800)
                        .HasColumnType("nvarchar(800)");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("OwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("OwnerId")
                        .IsUnique();

                    b.ToTable("Guild", "guild");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Guilds.GuildBuilding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<int>("GuildBuildingTypeId")
                        .HasColumnType("int");

                    b.Property<int>("GuildId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GuildBuildingTypeId");

                    b.HasIndex("GuildId");

                    b.ToTable("GuildBuilding", "guild");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Guilds.GuildBuildingBonus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<double>("Bonus")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<int>("GuildBuildingBonusTypeId")
                        .HasColumnType("int");

                    b.Property<int>("GuildBuildingId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.HasIndex("GuildBuildingBonusTypeId")
                        .IsUnique();

                    b.HasIndex("GuildBuildingId");

                    b.ToTable("GuildBuildingBonus", "guild");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Guilds.GuildImprovement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<int>("GuildId")
                        .HasColumnType("int");

                    b.Property<int>("GuildImprovementTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.HasIndex("GuildImprovementTypeId");

                    b.ToTable("GuildImprovement", "guild");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Guilds.GuildInvitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<int>("GuildId")
                        .HasColumnType("int");

                    b.Property<int>("InvitationType")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.HasIndex("UserId", "GuildId")
                        .IsUnique();

                    b.ToTable("GuildInvitation", "guild");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Guilds.GuildResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<int>("GuildId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<int>("ResourceTypeId")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("GuildId");

                    b.HasIndex("ResourceTypeId");

                    b.ToTable("GuildResource", "guild");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.HealthChecks.HealthCheck", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.ToTable("HealthCheck", "hc");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Improvement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<int>("ImprovementTypeId")
                        .HasColumnType("int");

                    b.Property<long>("LandId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.HasIndex("ImprovementTypeId");

                    b.HasIndex("LandId");

                    b.ToTable("Improvement", "dbo");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.ItemBonus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<double>("Bonus")
                        .HasColumnType("float");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<int>("ItemBonusTypeId")
                        .HasColumnType("int");

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.HasIndex("ItemBonusTypeId");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemBonus", "dbo");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Job", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<long>("LandId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<long>("NpcId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LandId");

                    b.HasIndex("NpcId")
                        .IsUnique();

                    b.ToTable("Job", "dbo");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.LandInstance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.HasKey("Id");

                    b.ToTable("LandInstance", "dbo");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Missions.DiscoveryMission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("LandId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<long>("NpcId")
                        .HasColumnType("bigint");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LandId");

                    b.HasIndex("NpcId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.HasIndex("NpcId", "LandId");

                    b.ToTable("DiscoveryMission", "mission");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Missions.ExploreMission", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("LandId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<long>("NpcId")
                        .HasColumnType("bigint");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LandId");

                    b.HasIndex("NpcId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.HasIndex("NpcId", "LandId");

                    b.ToTable("ExploreMission", "mission");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Nfts.Item", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<bool>("IsMinted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<int>("ItemTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ItemTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Item", "nft");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Nfts.Land", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<bool>("IsMinted")
                        .HasColumnType("bit");

                    b.Property<int>("LandInstanceId")
                        .HasColumnType("int");

                    b.Property<int>("LandTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PositionX")
                        .HasColumnType("int");

                    b.Property<int>("PositionY")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LandInstanceId");

                    b.HasIndex("LandTypeId");

                    b.HasIndex("PositionX", "PositionY");

                    b.HasIndex("LandInstanceId", "PositionX", "PositionY")
                        .IsUnique();

                    b.ToTable("Land", "nft");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Nfts.Npc", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("BuildingId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<bool>("IsAvatar")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMinted")
                        .HasColumnType("bit");

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<long?>("LandId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NpcHealthStateId")
                        .HasColumnType("int");

                    b.Property<int>("NpcTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex("ItemId")
                        .IsUnique()
                        .HasFilter("[ItemId] IS NOT NULL");

                    b.HasIndex("LandId");

                    b.HasIndex("NpcTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Npc", "nft");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Notification", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Attempts")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<string>("WalletAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("WasSent")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("WalletAddress")
                        .IsUnique();

                    b.ToTable("Notification", "dbo");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Travel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("LandFromId")
                        .HasColumnType("bigint");

                    b.Property<long>("LandToId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<long>("NpcId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("LandFromId");

                    b.HasIndex("LandToId");

                    b.HasIndex("NpcId", "LandFromId", "LandToId")
                        .IsUnique();

                    b.ToTable("Travel", "dbo");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.UserLand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<bool>("HasFog")
                        .HasColumnType("bit");

                    b.Property<long>("LandId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<bool>("OnSale")
                        .HasColumnType("bit");

                    b.Property<bool>("Owned")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LandId");

                    b.HasIndex("UserId");

                    b.HasIndex("LandId", "UserId")
                        .IsUnique();

                    b.ToTable("UserLand", "dbo");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.UserResource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("LastModificationDate")
                        .HasColumnType("DATETIME");

                    b.Property<int>("ResourceTypeId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ResourceTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("UserResource", "dbo");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Attribute", b =>
                {
                    b.HasOne("Mayhem.Dal.Tables.Dictionaries.AttributeType", "AttributeType")
                        .WithMany("Attributes")
                        .HasForeignKey("AttributeTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mayhem.Dal.Tables.Nfts.Npc", "Npc")
                        .WithMany("Attributes")
                        .HasForeignKey("NpcId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AttributeType");

                    b.Navigation("Npc");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Block", b =>
                {
                    b.HasOne("Mayhem.Dal.Tables.Dictionaries.BlockType", "BlockType")
                        .WithMany("Blocks")
                        .HasForeignKey("BlockTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BlockType");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Buildings.Building", b =>
                {
                    b.HasOne("Mayhem.Dal.Tables.Dictionaries.BuildingType", "BuildingType")
                        .WithMany("Buildings")
                        .HasForeignKey("BuildingTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mayhem.Dal.Tables.Nfts.Land", "Land")
                        .WithMany("Buildings")
                        .HasForeignKey("LandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BuildingType");

                    b.Navigation("Land");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Buildings.BuildingBonus", b =>
                {
                    b.HasOne("Mayhem.Dal.Tables.Dictionaries.BuildingBonusType", "BuildingBonusType")
                        .WithOne("BuildingBonus")
                        .HasForeignKey("Mayhem.Dal.Tables.Buildings.BuildingBonus", "BuildingBonusTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mayhem.Dal.Tables.Buildings.Building", "Building")
                        .WithMany("BuildingBonuses")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Building");

                    b.Navigation("BuildingBonusType");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.GameUser", b =>
                {
                    b.HasOne("Mayhem.Dal.Tables.Guilds.Guild", "GuildMember")
                        .WithMany("Users")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("GuildMember");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Guilds.Guild", b =>
                {
                    b.HasOne("Mayhem.Dal.Tables.GameUser", "Owner")
                        .WithOne("GuildOwner")
                        .HasForeignKey("Mayhem.Dal.Tables.Guilds.Guild", "OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Guilds.GuildBuilding", b =>
                {
                    b.HasOne("Mayhem.Dal.Tables.Dictionaries.GuildBuildingType", "GuildBuildingType")
                        .WithMany("GuildBuildings")
                        .HasForeignKey("GuildBuildingTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mayhem.Dal.Tables.Guilds.Guild", "Guild")
                        .WithMany("GuildBuildings")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Guild");

                    b.Navigation("GuildBuildingType");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Guilds.GuildBuildingBonus", b =>
                {
                    b.HasOne("Mayhem.Dal.Tables.Dictionaries.GuildBuildingBonusType", "GuildBuildingBonusType")
                        .WithOne("GuildBuildingBonus")
                        .HasForeignKey("Mayhem.Dal.Tables.Guilds.GuildBuildingBonus", "GuildBuildingBonusTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mayhem.Dal.Tables.Guilds.GuildBuilding", "GuildBuilding")
                        .WithMany("GuildBuildingBonuses")
                        .HasForeignKey("GuildBuildingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GuildBuilding");

                    b.Navigation("GuildBuildingBonusType");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Guilds.GuildImprovement", b =>
                {
                    b.HasOne("Mayhem.Dal.Tables.Guilds.Guild", "Guild")
                        .WithMany("GuildImprovements")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mayhem.Dal.Tables.Dictionaries.GuildImprovementType", "GuildImprovementType")
                        .WithMany("GuildImprovements")
                        .HasForeignKey("GuildImprovementTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Guild");

                    b.Navigation("GuildImprovementType");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Guilds.GuildInvitation", b =>
                {
                    b.HasOne("Mayhem.Dal.Tables.Guilds.Guild", "Guild")
                        .WithMany("GuildInvitations")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mayhem.Dal.Tables.GameUser", "User")
                        .WithMany("GuildInvitations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Guild");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Guilds.GuildResource", b =>
                {
                    b.HasOne("Mayhem.Dal.Tables.Guilds.Guild", "Guild")
                        .WithMany("GuildResources")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mayhem.Dal.Tables.Dictionaries.ResourceType", "ResourceType")
                        .WithMany("GuildResources")
                        .HasForeignKey("ResourceTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Guild");

                    b.Navigation("ResourceType");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Improvement", b =>
                {
                    b.HasOne("Mayhem.Dal.Tables.Dictionaries.ImprovementType", "ImprovementType")
                        .WithMany("Improvements")
                        .HasForeignKey("ImprovementTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mayhem.Dal.Tables.Nfts.Land", "Land")
                        .WithMany("Improvements")
                        .HasForeignKey("LandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ImprovementType");

                    b.Navigation("Land");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.ItemBonus", b =>
                {
                    b.HasOne("Mayhem.Dal.Tables.Dictionaries.ItemBonusType", "ItemBonusType")
                        .WithMany("ItemBonuses")
                        .HasForeignKey("ItemBonusTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mayhem.Dal.Tables.Nfts.Item", "Item")
                        .WithMany("ItemBonuses")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("ItemBonusType");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Job", b =>
                {
                    b.HasOne("Mayhem.Dal.Tables.Nfts.Land", "Land")
                        .WithMany("Jobs")
                        .HasForeignKey("LandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mayhem.Dal.Tables.Nfts.Npc", "Npc")
                        .WithOne("Job")
                        .HasForeignKey("Mayhem.Dal.Tables.Job", "NpcId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Land");

                    b.Navigation("Npc");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Missions.DiscoveryMission", b =>
                {
                    b.HasOne("Mayhem.Dal.Tables.Nfts.Land", "Land")
                        .WithMany("DiscoveryMissions")
                        .HasForeignKey("LandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mayhem.Dal.Tables.Nfts.Npc", "Npc")
                        .WithOne("DiscoveryMission")
                        .HasForeignKey("Mayhem.Dal.Tables.Missions.DiscoveryMission", "NpcId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mayhem.Dal.Tables.GameUser", "User")
                        .WithMany("DiscoveryMissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Land");

                    b.Navigation("Npc");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Missions.ExploreMission", b =>
                {
                    b.HasOne("Mayhem.Dal.Tables.Nfts.Land", "Land")
                        .WithMany("ExploreMissions")
                        .HasForeignKey("LandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mayhem.Dal.Tables.Nfts.Npc", "Npc")
                        .WithOne("ExploreMission")
                        .HasForeignKey("Mayhem.Dal.Tables.Missions.ExploreMission", "NpcId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mayhem.Dal.Tables.GameUser", "User")
                        .WithMany("ExploreMissions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Land");

                    b.Navigation("Npc");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Nfts.Item", b =>
                {
                    b.HasOne("Mayhem.Dal.Tables.Dictionaries.ItemType", "ItemType")
                        .WithMany("Items")
                        .HasForeignKey("ItemTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mayhem.Dal.Tables.GameUser", "GameUser")
                        .WithMany("Items")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("GameUser");

                    b.Navigation("ItemType");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Nfts.Land", b =>
                {
                    b.HasOne("Mayhem.Dal.Tables.LandInstance", "LandInstance")
                        .WithMany("Lands")
                        .HasForeignKey("LandInstanceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mayhem.Dal.Tables.Dictionaries.LandType", "LandType")
                        .WithMany("Lands")
                        .HasForeignKey("LandTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LandInstance");

                    b.Navigation("LandType");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Nfts.Npc", b =>
                {
                    b.HasOne("Mayhem.Dal.Tables.Buildings.Building", "Building")
                        .WithMany("Npcs")
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mayhem.Dal.Tables.Nfts.Item", "Item")
                        .WithOne("Npc")
                        .HasForeignKey("Mayhem.Dal.Tables.Nfts.Npc", "ItemId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mayhem.Dal.Tables.Nfts.Land", "Land")
                        .WithMany("Npcs")
                        .HasForeignKey("LandId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Mayhem.Dal.Tables.Dictionaries.NpcType", "NpcType")
                        .WithMany("Npcs")
                        .HasForeignKey("NpcTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mayhem.Dal.Tables.GameUser", "GameUser")
                        .WithMany("Npcs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Building");

                    b.Navigation("GameUser");

                    b.Navigation("Item");

                    b.Navigation("Land");

                    b.Navigation("NpcType");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Travel", b =>
                {
                    b.HasOne("Mayhem.Dal.Tables.Nfts.Land", "LandFrom")
                        .WithMany("TravelsFrom")
                        .HasForeignKey("LandFromId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mayhem.Dal.Tables.Nfts.Land", "LandTo")
                        .WithMany("TravelsTo")
                        .HasForeignKey("LandToId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mayhem.Dal.Tables.Nfts.Npc", "Npc")
                        .WithMany("Travels")
                        .HasForeignKey("NpcId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LandFrom");

                    b.Navigation("LandTo");

                    b.Navigation("Npc");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.UserLand", b =>
                {
                    b.HasOne("Mayhem.Dal.Tables.Nfts.Land", "Land")
                        .WithMany("UserLands")
                        .HasForeignKey("LandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mayhem.Dal.Tables.GameUser", "User")
                        .WithMany("UserLands")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Land");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.UserResource", b =>
                {
                    b.HasOne("Mayhem.Dal.Tables.Dictionaries.ResourceType", "ResourceType")
                        .WithMany("UserResources")
                        .HasForeignKey("ResourceTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Mayhem.Dal.Tables.GameUser", "GameUser")
                        .WithMany("UserResources")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GameUser");

                    b.Navigation("ResourceType");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Mayhem.Dal.Tables.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Mayhem.Dal.Tables.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mayhem.Dal.Tables.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Mayhem.Dal.Tables.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Buildings.Building", b =>
                {
                    b.Navigation("BuildingBonuses");

                    b.Navigation("Npcs");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.AttributeType", b =>
                {
                    b.Navigation("Attributes");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.BlockType", b =>
                {
                    b.Navigation("Blocks");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.BuildingBonusType", b =>
                {
                    b.Navigation("BuildingBonus");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.BuildingType", b =>
                {
                    b.Navigation("Buildings");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.GuildBuildingBonusType", b =>
                {
                    b.Navigation("GuildBuildingBonus");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.GuildBuildingType", b =>
                {
                    b.Navigation("GuildBuildings");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.GuildImprovementType", b =>
                {
                    b.Navigation("GuildImprovements");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.ImprovementType", b =>
                {
                    b.Navigation("Improvements");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.ItemBonusType", b =>
                {
                    b.Navigation("ItemBonuses");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.ItemType", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.LandType", b =>
                {
                    b.Navigation("Lands");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.NpcType", b =>
                {
                    b.Navigation("Npcs");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Dictionaries.ResourceType", b =>
                {
                    b.Navigation("GuildResources");

                    b.Navigation("UserResources");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.GameUser", b =>
                {
                    b.Navigation("DiscoveryMissions");

                    b.Navigation("ExploreMissions");

                    b.Navigation("GuildInvitations");

                    b.Navigation("GuildOwner");

                    b.Navigation("Items");

                    b.Navigation("Npcs");

                    b.Navigation("UserLands");

                    b.Navigation("UserResources");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Guilds.Guild", b =>
                {
                    b.Navigation("GuildBuildings");

                    b.Navigation("GuildImprovements");

                    b.Navigation("GuildInvitations");

                    b.Navigation("GuildResources");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Guilds.GuildBuilding", b =>
                {
                    b.Navigation("GuildBuildingBonuses");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.LandInstance", b =>
                {
                    b.Navigation("Lands");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Nfts.Item", b =>
                {
                    b.Navigation("ItemBonuses");

                    b.Navigation("Npc");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Nfts.Land", b =>
                {
                    b.Navigation("Buildings");

                    b.Navigation("DiscoveryMissions");

                    b.Navigation("ExploreMissions");

                    b.Navigation("Improvements");

                    b.Navigation("Jobs");

                    b.Navigation("Npcs");

                    b.Navigation("TravelsFrom");

                    b.Navigation("TravelsTo");

                    b.Navigation("UserLands");
                });

            modelBuilder.Entity("Mayhem.Dal.Tables.Nfts.Npc", b =>
                {
                    b.Navigation("Attributes");

                    b.Navigation("DiscoveryMission");

                    b.Navigation("ExploreMission");

                    b.Navigation("Job");

                    b.Navigation("Travels");
                });
#pragma warning restore 612, 618
        }
    }
}
